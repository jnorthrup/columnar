headers.linux =ctype.h errno.h fcntl.h liburing.h linux/fs.h linux/io_uring.h netinet/in.h signal.h stdatomic.h stdio.h stdlib.h string.h sys/ioctl.h sys/mman.h sys/resource.h sys/stat.h sys/syscall.h sys/types.h sys/uio.h unistd.h bits/stat.h
#ac.h
#headerFilter = liburing/* sys/*
compilerOpts.linux = -I/usr/include -I/usr/include/x86_64-linux-gnu
linkerOpts.linux = -L/usr/lib/x86_64-linux-gnu -L/usr/lib -luring
---

#define CATQUEUE_DEPTH 256
#define BLOCK_SZ    1024

struct file_info {
    off_t file_sz;
    struct iovec iovecs[];      /* Referred by readv/writev */
};

/* This is x86 specific
#define read_barrier()  __asm__ __volatile__("":::"memory")
#define write_barrier() __asm__ __volatile__("":::"memory") */

static inline void  read_barrier() { __asm__ __volatile__("" ::: "memory") ;}
static inline void  write_barrier() { __asm__ __volatile__("" ::: "memory"); }

enum t_setup_ret {
	T_SETUP_OK	= 0,
	T_SETUP_SKIP,
};




#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))
